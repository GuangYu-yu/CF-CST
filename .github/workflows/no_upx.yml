name: 构建 cfspeed (无压缩)
on:  
  workflow_dispatch:   # 允许手动触发

jobs:  
  build:  
    name: 构建  
    runs-on: ubuntu-latest  

    steps:  
      - name: 检出代码  
        uses: actions/checkout@v4  

      - name: 设置 Go 环境  
        uses: actions/setup-go@v5
        with:  
          go-version: '1.24.1'  

      - name: 初始化 Go 模块
        run: |
          go mod init cfspeed
          go get github.com/olekukonko/tablewriter
          go mod tidy

      - name: 构建所有平台 (无压缩)  
        run: |  
          # 创建构建目录和存储目录
          mkdir -p build_no_upx
          mkdir -p binaries_no_upx

          # 构建函数 (不使用UPX压缩)
          build_without_compression() {
            local OS=$1
            local ARCH=$2
            local SUFFIX=$3
            local EXTRA_FLAGS=$4
            local NAME="cfspeed${SUFFIX}"
            
            echo "构建 $OS $ARCH 版本..."
            env GOOS=$OS GOARCH=$ARCH $EXTRA_FLAGS go build -ldflags="-s -w" -o "$NAME" cfspeed.go
            tar -czf "build_no_upx/cfspeed_${OS}_${ARCH}_no_upx.tar.gz" "$NAME"
            cp "$NAME" "binaries_no_upx/cfspeed_${OS}_${ARCH}"
            rm "$NAME"
          }

          # Linux
          build_without_compression linux amd64
          build_without_compression linux 386
          build_without_compression linux arm64
          build_without_compression linux arm
          
          # MIPS (OpenWrt常用架构)
          env GOOS=linux GOARCH=mips GOMIPS=softfloat go build -ldflags="-s -w" -o cfspeed cfspeed.go
          tar -czf build_no_upx/cfspeed_linux_mips_no_upx.tar.gz cfspeed
          cp cfspeed binaries_no_upx/cfspeed_linux_mips
          rm cfspeed
          
          env GOOS=linux GOARCH=mipsle GOMIPS=softfloat go build -ldflags="-s -w" -o cfspeed cfspeed.go
          tar -czf build_no_upx/cfspeed_linux_mipsle_no_upx.tar.gz cfspeed
          cp cfspeed binaries_no_upx/cfspeed_linux_mipsle
          rm cfspeed

          # Windows
          build_without_compression windows amd64 .exe
          build_without_compression windows 386 .exe

          # macOS
          build_without_compression darwin amd64
          build_without_compression darwin arm64

      - name: 生成 SHA256 校验和  
        run: |  
          cd build_no_upx  
          sha256sum * > sha256sum.txt  

      - name: 提交并推送更改
        if: success()
        run: |
          if [ -d "binaries_no_upx" ]; then
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
            git pull origin main --no-rebase || git pull origin master --no-rebase
            git add binaries_no_upx/
            current_time=$(date '+%Y/%m/%d %H:%M:%S')
            if ! git diff --staged --quiet; then
              git commit -m "更新未压缩二进制文件 ${current_time}"
              git push
            fi
          fi

      - name: 上传构建产物  
        uses: actions/upload-artifact@v4
        with:  
          name: cfspeed-未压缩构建产物  
          path: build_no_upx/*  

      - name: 创建发布版本  
        uses: softprops/action-gh-release@v2
        if: github.event_name == 'workflow_dispatch'  
        with:  
          tag_name: v${{ github.run_number }}-no-upx  
          name: Cloudflare CIDR 测速工具 (未压缩版) v${{ github.run_number }}  
          draft: false  
          prerelease: false  
          files: |  
            build_no_upx/*.tar.gz  
            build_no_upx/sha256sum.txt  
        env:  
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
