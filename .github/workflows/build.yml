name: 构建 cfspeed
on:  
  workflow_dispatch:   # 允许手动触发

jobs:  
  build:  
    name: 构建  
    runs-on: ubuntu-latest  

    steps:  
      - name: 检出代码  
        uses: actions/checkout@v4  

      - name: 删除旧版本
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const releases = await github.rest.repos.listReleases({
              owner,
              repo
            });
            
            for (const release of releases.data) {
              await github.rest.repos.deleteRelease({
                owner,
                repo,
                release_id: release.id
              });
              
              if (release.tag_name) {
                try {
                  await github.rest.git.deleteRef({
                    owner,
                    repo,
                    ref: `tags/${release.tag_name}`
                  });
                } catch (e) {
                  console.log(`Failed to delete tag ${release.tag_name}: ${e}`);
                }
              }
            }

      - name: 设置 Rust 环境  
        uses: actions-rust-lang/setup-rust-toolchain@v1.11.0
        with:  
          rust-version: '1.82.0'

      - name: 安装依赖
        run: |
          sudo apt-get update
          sudo apt-get install -y libssl-dev upx musl-tools

      - name: 设置 OpenSSL 环境变量
        run: echo "OPENSSL_DIR=/usr/lib/ssl" >> $GITHUB_ENV

      - name: 安装 musl 目标
        run: |
          rustup target add x86_64-unknown-linux-musl
          rustup target add aarch64-unknown-linux-musl

      - name: 构建所有平台  
        run: |  
          mkdir -p build
          mkdir -p binaries

          build_and_compress() {
            local OS=$1
            local ARCH=$2
            local SUFFIX=$3
            local NAME="cfspeed${SUFFIX}"
            
            echo "构建 $OS $ARCH..."
            if [ "$OS" = "linux" ]; then
              # 对 Linux 平台使用静态链接
              cargo build --release --target $ARCH-unknown-linux-musl
              cp target/$ARCH-unknown-linux-musl/release/cfspeed "$NAME"
            else
              cargo build --release --target $ARCH-unknown-$OS
              cp target/$ARCH-unknown-$OS/release/cfspeed "$NAME"
            fi
            
            upx --best --brute "$NAME" || true
            tar -czf "build/cfspeed_${OS}_${ARCH}.tar.gz" "$NAME"
            cp "$NAME" "binaries/cfspeed_${OS}_${ARCH}${SUFFIX}"
            rm "$NAME"
          }

          # Linux 64-bit and ARM
          build_and_compress linux x86_64
          build_and_compress linux aarch64

          # Windows 64-bit
          build_and_compress windows x86_64 .exe

          # macOS 64-bit
          build_and_compress darwin x86_64

      - name: 生成 SHA256 校验和  
        run: |  
          cd build  
          sha256sum * > sha256sum.txt  

      - name: 提交并推送更改
        if: success()
        run: |
          if [ -d "binaries" ]; then
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
            git pull origin main --no-rebase || git pull origin master --no-rebase
            git add binaries/
            current_time=$(date '+%Y/%m/%d %H:%M:%S')
            if ! git diff --staged --quiet; then
              git commit -m "更新二进制文件 ${current_time}"
              git push
            fi
          fi

      - name: 上传构建产物  
        uses: actions/upload-artifact@v4
        with:  
          name: cfspeed-构建产物  
          path: build/*  

      - name: 创建发布版本  
        uses: softprops/action-gh-release@v2
        if: github.event_name == 'workflow_dispatch'  
        with:  
          tag_name: v${{ github.run_number }}  
          name: Cloudflare CIDR 测速工具 v${{ github.run_number }}  
          draft: false  
          prerelease: false  
          files: |  
            build/*.tar.gz  
            build/sha256sum.txt  
        env:  
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
